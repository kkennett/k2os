#   
#   BSD 3-Clause License
#   
#   Copyright (c) 2023, Kurt Kennett
#   All rights reserved.
#   
#   Redistribution and use in source and binary forms, with or without
#   modification, are permitted provided that the following conditions are met:
#   
#   1. Redistributions of source code must retain the above copyright notice, this
#      list of conditions and the following disclaimer.
#   
#   2. Redistributions in binary form must reproduce the above copyright notice,
#      this list of conditions and the following disclaimer in the documentation
#      and/or other materials provided with the distribution.
#   
#   3. Neither the name of the copyright holder nor the names of its
#      contributors may be used to endorse or promote products derived from
#      this software without specific prior written permission.
#   
#   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
#   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
#   FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
#   DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
#   SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
#   CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
#   OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#   OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#########################################################
[XDL]
ID{4F5060AC-1B6F-4BC1-8D30-390D1A8ECE6C}

#########################################################
[Code]
#
#Fundamentals
#
__cxa_atexit
__call_dtors

#
#ATOMIC
#
K2ATOMIC_Add32
K2ATOMIC_AddExchange32
K2ATOMIC_And32
K2ATOMIC_Or32
K2ATOMIC_Xor32
K2ATOMIC_Not32
K2ATOMIC_Exchange32
K2ATOMIC_Add64
K2ATOMIC_AddExchange64
K2ATOMIC_And64
K2ATOMIC_Or64
K2ATOMIC_Xor64
K2ATOMIC_Not64
K2ATOMIC_Exchange64
K2ATOMIC_CompareExchange32
K2ATOMIC_CompareExchange64

#
#ASCII
#
K2ASC_FindCharLen
K2ASC_FindCharInsLen
K2ASC_FindAnyCharLen
K2ASC_FindAnyCharInsLen
K2ASC_Len
K2ASC_CopyLen
K2ASC_ConcatLen
K2ASC_CompLen
K2ASC_CompInsLen
K2ASC_ToUpper
K2ASC_ToLower
K2ASC_NumTypeLen
K2ASC_NumValue32Len
K2ASC_Emitf
K2ASC_Printf
K2ASC_PrintfLen
K2ASC_PrintfVarLen
K2ASC_FindCharConstLen
K2ASC_FindCharConstInsLen
K2ASC_FindAnyCharConstLen
K2ASC_FindAnyCharConstInsLen

#
#CRC
#
K2CRC_Calc16
K2CRC_Calc32
K2CRC_MemCopyAndCalc32

#
#LIST
#
K2LIST_Init
K2LIST_AddAtHead
K2LIST_AddAtTail
K2LIST_AddBefore
K2LIST_AddAfter
K2LIST_AppendToTail
K2LIST_Remove

#
#TREE
#
K2TREE_Init
K2TREE_Insert
K2TREE_Remove
K2TREE_PrevNode
K2TREE_NextNode
K2TREE_FirstNode
K2TREE_LastNode
K2TREE_Find
K2TREE_FindOrAfter

#
#MEM
#
K2MEM_Copy8
K2MEM_Copy16
K2MEM_Copy32
K2MEM_Copy64
K2MEM_Copy
K2MEM_Set
K2MEM_Set16
K2MEM_Set32
K2MEM_Set64
K2MEM_Swap8
K2MEM_Swap16
K2MEM_Swap32
K2MEM_Swap64
K2MEM_Swap
K2MEM_Verify
K2MEM_Verify16
K2MEM_Verify32
K2MEM_Verify64
K2MEM_Compare8
K2MEM_Compare16
K2MEM_Compare32
K2MEM_Compare64
K2MEM_Compare
K2MEM_Scatter
K2MEM_Gather
K2MEM_CountVectorsBytes

#
# K2OSBASE API
#
K2OS_CacheOperation

#
# K2OS API
#
K2OS_Debug_OutputString
K2OS_Debug_Break

K2OS_RaiseException

K2OS_System_GetMsTick
K2OS_System_GetMsTick32
K2OS_System_GetHfFreq
K2OS_System_GetHfTick
K2OS_System_HfTickFromMsTick
K2OS_System_MsTickFromHfTick
K2OS_System_HfTickFromMsTick32
K2OS_System_MsTick32FromHfTick
K2OS_System_CreateProcess

K2OS_Process_GetId
K2OS_Process_Exit

K2OS_Thread_Create
K2OS_Thread_SetName
K2OS_Thread_GetName
K2OS_Thread_GetId
K2OS_Thread_GetLastStatus
K2OS_Thread_SetLastStatus
K2OS_Thread_GetCpuCoreAffinityMask
K2OS_Thread_SetCpuCoreAffinityMask
K2OS_Thread_Exit
K2OS_Thread_Sleep
K2OS_Thread_StallMicroseconds
K2OS_Thread_GetExitCode
K2OS_Thread_WaitMany
K2OS_Thread_WaitOne

K2OS_CritSec_Init
K2OS_CritSec_TryEnter
K2OS_CritSec_Enter
K2OS_CritSec_Leave
K2OS_CritSec_Done

K2OS_Tls_AllocSlot
K2OS_Tls_FreeSlot
K2OS_Tls_SetValue
K2OS_Tls_GetValue

K2OS_Heap_Alloc
K2OS_Heap_Free

K2OS_Token_Clone
K2OS_Token_Destroy
K2OS_Token_Share

K2OS_Notify_Create
K2OS_Notify_Signal

K2OS_Gate_Create
K2OS_Gate_Open
K2OS_Gate_Close

K2OS_Semaphore_Create
K2OS_Semaphore_Inc

K2OS_PageArray_Create
K2OS_PageArray_GetLength

K2OS_Virt_Reserve
K2OS_Virt_Get
K2OS_Virt_Release

K2OS_VirtMap_Create
K2OS_VirtMap_AcquirePageArray
K2OS_VirtMap_Acquire
K2OS_VirtMap_GetInfo

K2OS_Alarm_Create

K2OS_Xdl_Acquire
K2OS_Xdl_AddRef
K2OS_Xdl_AddRefContaining
K2OS_Xdl_Release
K2OS_Xdl_FindExport
K2OS_Xdl_GetIdent

K2OS_Mailbox_Create
K2OS_Mailbox_Send
K2OS_Mailbox_Recv

K2OS_IfInst_Create
K2OS_IfInst_GetId
K2OS_IfInst_SetMailbox
K2OS_IfInst_GetContext
K2OS_IfInst_SetContext
K2OS_IfInst_Publish
K2OS_IfInstId_GetDetail
K2OS_IfEnum_Create
K2OS_IfEnum_Reset
K2OS_IfEnum_Next
K2OS_IfSubs_Create

K2OS_IpcEnd_Create
K2OS_IpcEnd_GetParam
K2OS_IpcEnd_SendRequest
K2OS_IpcEnd_AcceptRequest
K2OS_IpcEnd_Send
K2OS_IpcEnd_SendVector
K2OS_IpcEnd_Disconnect
K2OS_IpcEnd_Delete
K2OS_IpcEnd_ProcessMsg
K2OS_Ipc_RejectRequest

K2OS_RpcServer_GetIfInstId
K2OS_RpcServer_Register
K2OS_RpcServer_Deregister
K2OS_RpcObj_GetContext
K2OS_RpcObj_SendNotify
K2OS_RpcObj_PublishIfInst
K2OS_RpcObj_RemoveIfInst
K2OS_Rpc_CreateObj
K2OS_Rpc_AttachByObjId
K2OS_Rpc_AttachByIfInstId
K2OS_Rpc_GetObjId
K2OS_Rpc_SetNotifyTarget
K2OS_Rpc_Call
K2OS_Rpc_Release

K2OS_BlockIo_Attach
K2OS_BlockIo_GetMedia
K2OS_BlockIo_RangeCreate
K2OS_BlockIo_RangeDelete
K2OS_BlockIo_Read
K2OS_BlockIo_Write
K2OS_BlockIo_Erase

#########################################################
[Data]
#
#Fundamentals
#
K2_Assert
K2_ExTrap_Mount
K2_ExTrap_Dismount
K2_RaiseException

